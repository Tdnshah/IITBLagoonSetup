# These values must be set on install, as they don't have sensible defaults.

# harborAdminPassword:
# elasticsearchURL:
# harborURL:
# kibanaURL:
# registry:
# s3BAASSecretAccessKey:
# s3BAASAccessKeyID:
# s3FilesAccessKeyID:
# s3FilesBucket:
# s3FilesHost:
# s3FilesSecretAccessKey:

# These values are optional.

# overwriteActiveStandbyTaskImage:

# These values are optional depending on the services Lagoon is integrated with
# in your environment.

# gitlabAPIToken:
# gitlabAPIURL:
# bitbucketAPIToken:
# bitbucketAPIURL:
# s3Region:

# These values may be set on install, otherwise the chart tries to guess
# sensible defaults.

# keycloakFrontEndURL: https://keycloak.example.com
# lagoonAPIURL: https://api.example.com/graphql
# lagoonUIURL: https://ui.example.com
# lagoonWebhookURL: https://webhook-handler.example.com

keycloakFrontEndURL: https://keycloak.iitb.ac.in:30427
lagoonAPIURL: https://lagoonapi.iitb.ac.in:30427
lagoonUIURL: https://lagoonui.iitb.ac.in:30427
lagoonWebhookURL: https://lagoon-webhook-handler.iitb.ac.in:30427
harborURL: registry.iitb.ac.in:30427
registry: registry.iitb.ac.in:30427

# These values are randomly generated on install if not otherwise defined.

# apiDBPassword:
# jwtSecret:
# keycloakAdminPassword:
# keycloakAPIClientSecret:
# keycloakAuthServerClientSecret:
# keycloakDBPassword:
# keycloakLagoonAdminPassword:
# logsDBAdminPassword:
# rabbitMQPassword:
# redisPassword:
# k8upBackupBucketName:

harborAdminPassword: iitb@123
apiDBPassword: iitb@123
jwtSecret: iitb@123
keycloakAdminPassword: iitb@123
keycloakAPIClientSecret: iitb@123
keycloakAuthServerClientSecret: iitb@123
keycloakDBPassword: iitb@123
keycloakLagoonAdminPassword: iitb@123
logsDBAdminPassword: iitb@123
rabbitMQPassword: iitb@123
redisPassword: iitb@123
k8upBackupBucketName: iitb@123
rabbitMQUsername: lagoon

# This value is set to match jwtSecret on existing installs if not defined.
# It should only ever be set here for backwards compatibility.

# projectSeed:

# These values are the chart defaults, but can be overridden.
imagePullSecrets: []

rabbitMQUsername: lagoon

k8upS3Endpoint: ""

keycloakAdminUser: lagoonadmin
# this is required if email sending is to be enabled in keycloak
# keycloakAdminEmail: admin@example.com

buildDeployImage:
  edge:
    enabled: false

# Set to an empty string to support Harbor v1.x.x
harborAPIVersion: v2.0

# this default podSecurityContext is set for all services and can be overridden
# on the service level.
podSecurityContext:
  fsGroup: 10001
  runAsGroup: 0
  runAsUser: 10000

# Set the default ingressClass for the exposed lagoon-core services
# it can be overridden per-service if needed via ingress.ingressClassName
# Note that this is the Class, not the IngressName
defaultIngressClassName: nginx

# this default image tag is set for all services and can be overridden
# on the service level, if not set it falls back to chart appVersion.
imageTag: ""

# This value is false by default, which means that Developers can SSH to
# Development environments as per the Lagoon documentation
# (https://docs.lagoon.sh/administering-lagoon/rbac/#developer).
# Set this to true to:
# * block Developers from SSH access to Lagoon environments; and
# * stop Developers from getting a redirect message when trying to SSH into the
#   ssh-token service.
# blockDeveloperSSH: false

# the following services are part of the lagoon-core chart

api:
  replicaCount: 2
  image:
    repository: uselagoon/api
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "lagoonapi.iitb.ac.in"
      paths:
      - /
    tls:
    # - secretName: chart-example-tls
      hosts:
      - "lagoonapi.iitb.ac.in"

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "256Mi"
      cpu: "500m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

apiDB:
  image:
    repository: uselagoon/api-db
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    port: 3306

  podAnnotations:
    appuio.ch/backupcommand: >
      /bin/sh -c "mysqldump --max-allowed-packet=500M --events --routines
      --quick --add-locks --no-autocommit --single-transaction --all-databases"
    backup.appuio.ch/file-extension: .api-db.sql

  securityContext: {}

  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"

  additionalEnvs:
  #   FOO: Bar

  storageSize: 128Gi

  startupProbe:
    # 60*10s period = 10 minutes
    failureThreshold: 60
    tcpSocket:
      port: mariadb

  livenessProbe:
    exec:
      command:
      - mysqladmin
      - --host=localhost
      - --port=3306
      - --connect-timeout=4
      - ping

apiRedis:
  image:
    repository: uselagoon/api-redis
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  persistence:
    enabled: true
    size: 100Mi

  service:
    type: ClusterIP
    port: 6379

keycloak:
  # keycloak realm and email settings configuration
  realmSettings:
    # the full list of config settings is available TODO
    options:
      resetPasswordAllowed: true
      rememberMe: true
  email:
    enabled: true
    settings:
      host: mailhog
      port: '1025'
      from: lagoon@lagoon.iitb.ac.in
      fromDisplayName: Lagoon Keycloak Admin
      replyToDisplayName: Lagoon Keycloak No-Reply
      replyTo: lagoon@lagoon.iitb.ac.in
  replicaCount: 1
  image:
    repository: uselagoon/keycloak
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "keycloak.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
      hosts:
      - keycloak.iitb.ac.in

keycloakDB:
  replicaCount: 1
  image:
    repository: uselagoon/keycloak-db
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    port: 3306

  podAnnotations:
    appuio.ch/backupcommand: >
      /bin/sh -c "mysqldump --max-allowed-packet=500M --events --routines
      --quick --add-locks --no-autocommit --single-transaction --all-databases"
    backup.appuio.ch/file-extension: .keycloak-db.sql

  securityContext: {}

  resources:
    requests:
      memory: "512Mi"
      cpu: "100m"

  additionalEnvs:
  #   FOO: Bar

  startupProbe:
    # 60*10s period = 10 minutes
    failureThreshold: 60
    tcpSocket:
      port: mariadb

broker:
  replicaCount: 3
  image:
    repository: uselagoon/broker
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    ports:
      epmd: 4369
      amqp: 5672
      http: 15672
      metrics: 15692
    amqpExternal:
      enabled: false
      type: LoadBalancer
      port: 5672

  serviceMonitor:
    enabled: true

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"

  additionalEnvs:
  #   FOO: Bar

  serviceAccount:
    # Annotations to add to the service account
    annotations:
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    name: ""

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  ingress:
    enabled: true
    annotations:
      # kubernetes.io/tls-acme: "true"
    hosts:
    - host: "lagoonbroker.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
       hosts:
         - lagoonbroker.iitb.ac.in

  startupProbe:
    # 60*10s period = 10 minutes
    failureThreshold: 60
    tcpSocket:
      port: amqp

authServer:
  replicaCount: 2
  image:
    repository: uselagoon/auth-server
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    port: 80
    annotations: {}

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

webhooks2tasks:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/webhooks2tasks
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

webhookHandler:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/webhook-handler
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "lagoonwebhook.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
       hosts:
        - "lagoonwebhook.iitb.ac.in"

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

ui:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/ui
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "lagoonui.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
       hosts:
         - lagoonui.iitb.ac.in

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

actionsHandler:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/actions-handler
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  additionalEnvs:
  #   FOO: Bar

  resources:
    requests:
      memory: "16Mi"
      cpu: "10m"

backupHandler:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/backup-handler
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "32Mi"
      cpu: "50m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: false
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "lagoonbackup.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
       hosts:
         - lagoonbackup.iitb.ac.in

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

insightsHandler:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/insights-handler
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: main

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "32Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  trivy:
    enabled: false
    image:
      repository: aquasec/trivy
      tag: 0.48.0
    service:
      type: ClusterIP
      port: 4954

logs2notifications:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/logs2notifications
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  logs2slack:
    disabled: true
  logs2rocketchat:
    disabled: true
  logs2microsoftteams:
    disabled: true
  logs2email:
    disabled: true
  logs2webhooks:
    disabled: true
  logs2s3:
    disabled: false

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "16Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

drushAlias:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/drush-alias
    pullPolicy: Always
    # Overrides the image tag whose default is "latest".
    tag: "v3.1.0"

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "8Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: "drush-alias.iitb.ac.in"
      paths:
      - /
    tls:
    #  - secretName: chart-example-tls
       hosts:
         - drush-alias.iitb.ac.in

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

ssh:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/ssh
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "128Mi"
      cpu: "500m"

  additionalEnvs:
  #   FOO: Bar

  service:
    type: ClusterIP
    port: 2020
    annotations: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

workflows:
  enabled: true
  replicaCount: 2
  image:
    repository: uselagoon/workflows
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "16Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

nats:
  enabled: true
  # inject additional config
  additionalVolumes:
  - name: lagoon-core-nats-tls
    secret:
      secretName: lagoon-core-nats-tls
  additionalVolumeMounts:
  - name: lagoon-core-nats-tls
    mountPath: /etc/lagoon-core-nats-tls
  nats:
    config:
    - name: lagoon-core
      secret:
        secretName: lagoon-core-nats-conf
  cluster:
    enabled: true
    name: lagoon-core
    # internal cluster IPs are not routable, so don't advertise them
    noAdvertise: true
  natsbox:
    enabled: false
  # to connect to nats, pods must have the right label
  networkPolicy:
    enabled: true
    allowExternal: false
    # allow inbound leaf connections
    extraIngress:
    - ports:
      - port: 7422
        protocol: TCP

natsService:
  # this service is enabled via nats.enabled
  type: Cluster IP
  leafnodes:
    port: 7422

natsConfig:
  users:
    lagoonRemote: 
    - user: ci-ssh-portal
      password: ci-password
    # Remote cluster  credentials and the account they have access to are
    # specified here.
    #
    # - user: ...
    #   password: ...
  tls: 
    secretData:
      ca.crt: |
        -----BEGIN CERTIFICATE-----
        MIIBgDCCASagAwIBAgIUe/jnFQ0sqoJKQP9CmguStIhyCNcwCgYIKoZIzj0EAwIw
        HjEcMBoGA1UEAxMTbmF0cy1jYS5leGFtcGxlLmNvbTAeFw0yMjAzMDMxNDU2MDBa
        Fw0zMjAyMjkxNDU2MDBaMB4xHDAaBgNVBAMTE25hdHMtY2EuZXhhbXBsZS5jb20w
        WTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAT6ZjUtTIpBJSgGRyQIPdcFKBkt3h76
        eyIdFVkR4L5NxVLwxyrj3ejbkA/KtbHfT+5+i1lpFyneUnCv8uJMGXXDo0IwQDAO
        BgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJnGYc+vw
        zYXQvaFUImSZnEytUkkwCgYIKoZIzj0EAwIDSAAwRQIgET+GwxQ2TokxnPkNhgjb
        zJ6PDtVHMNclAWSDebP9nnwCIQDrblreePb+pUBHvxFZNVFYBV4wF2gEkJC51tjw
        a8aklQ==
        -----END CERTIFICATE-----
      server.crt: |
        -----BEGIN CERTIFICATE-----
        MIIB6TCCAY+gAwIBAgIUU0rJ7NyqtVt26P4ymCHc2wI1xTgwCgYIKoZIzj0EAwIw
        HjEcMBoGA1UEAxMTbmF0cy1jYS5leGFtcGxlLmNvbTAeFw0yMjAzMDMxNDU2MDBa
        Fw0zMjAyMjkxNDU2MDBaMCgxJjAkBgNVBAMTHWxhZ29vbi1jb3JlLW5hdHMtY29u
        Y2VudHJhdG9yMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEzOKHU61tPi3IS4Tb
        TekSPQ5j0eS3ALLR8AhHY+lV6K3FNHnrCeCkBP12Kg3c29fjk3OnvdOixqgjXTO9
        1GvhgqOBoDCBnTAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwEw
        DAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUs3UCwAl/W6+UyUMhlyL/P2igQCQwHwYD
        VR0jBBgwFoAUJnGYc+vwzYXQvaFUImSZnEytUkkwKAYDVR0RBCEwH4IdbGFnb29u
        LWNvcmUtbmF0cy1jb25jZW50cmF0b3IwCgYIKoZIzj0EAwIDSAAwRQIhAOEZUQfm
        tuziNxJqFdnsQqzEHHDcFBJsMqzC2T4AChinAiBr/BMy3ZFUE57629+mvnevQKF2
        Xj0jfUL6vS82EAusNQ==
        -----END CERTIFICATE-----
      server.key: |
        -----BEGIN EC PRIVATE KEY-----
        MHcCAQEEIEEOrqm8DWTCnc6rq2OHmWcfSu/ewpv009gD9ekvWKMDoAoGCCqGSM49
        AwEHoUQDQgAEzOKHU61tPi3IS4TbTekSPQ5j0eS3ALLR8AhHY+lV6K3FNHnrCeCk
        BP12Kg3c29fjk3OnvdOixqgjXTO91Gvhgg==
        -----END EC PRIVATE KEY-----
    # If the lagoon-core-nats-tls secret should be created by the lagoon-core
    # chart, certificate values can be specified directly in secretData.
    # Configuring TLS this way also allows specifying a custom ca.crt.
    #
    # secretData:
    #   ca.crt: |
    #     ...
    #   server.crt: |
    #     ...
    #   server.key: |
    #     ...
    #
    # If the TLS secret is created outside the lagoon-core chart, it should be
    # named lagoon-core-nats-tls. This secret should contain fields tls.crt and
    # tls.key, and the certificate should be issued by a public authority.

sshPortalAPI:
  enabled: false
  replicaCount: 2
  image:
    repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-portal-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.30.1"

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "8Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  serviceAccount:
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname
    # template
    name: ""

  serviceMonitor:
    enabled: true

  service:
    type: ClusterIP
    ports:
      metrics: 9911

opensearchSync:
  enabled: false
  image:
    repository: ghcr.io/uselagoon/lagoon-opensearch-sync
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.7.1"

  # debug logging toggle
  debug: false

  # root certificate for the server certificate presented by opensearch
  opensearchCACertificate: |
  # -----BEGIN CERTIFICATE-----
  # ...
  # -----END CERTIFICATE-----

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "8Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

sshToken:
  enabled: false
  replicaCount: 2
  image:
    repository: ghcr.io/uselagoon/lagoon-ssh-portal/ssh-token
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.30.1"

  podAnnotations: {}

  securityContext: {}

  resources:
    requests:
      memory: "8Mi"
      cpu: "10m"

  additionalEnvs:
  #   FOO: Bar

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  serviceMonitor:
    enabled: true

  service:
    type: LoadBalancer
    ports:
      sshserver: 22

  metricsService:
    type: ClusterIP
    ports:
      metrics: 9948

  # host keys, PEM encoded
  hostKeys:
    ecdsa: ""
    ed25519: ""
    rsa: ""